services:
  migrate:
    image: fredrikburmester/streamystats-v2-migrate:2.4.0
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGPASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    restart: "no"

  app:
    image: fredrikburmester/streamystats-v2-nextjs:v2.5.0
    ports:
      - 3010:3000
    labels:
      traefik.enable: true
      traefik.http.routers.streamystats.rule: Host(`streamystats.simn.io`)
      traefik.http.services.streamystats.loadbalancer.server.port: "3010"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      JOB_SERVER_URL: http://job-server:3005
      HOSTNAME: 0.0.0.0
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    restart: unless-stopped
    healthcheck:
      test:
        [CMD, wget, --quiet, --tries=1, --spider, http://localhost:3000/api/health]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - default
      - traefik

  job-server:
    image: fredrikburmester/streamystats-v2-job-server:2.4.0
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      PORT: "3005"
      HOST: 0.0.0.0
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    restart: unless-stopped
    healthcheck:
      test:
        [CMD, wget, --quiet, --tries=1, --spider, http://localhost:3005/health]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  db:
    image: ghcr.io/tensorchord/vchord-postgres:pg17-v0.4.1
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - /opt/postgresql/streamystats:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test:
        [CMD-SHELL, "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-streamystats}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

networks:
  traefik:
    name: internal
    external: true
