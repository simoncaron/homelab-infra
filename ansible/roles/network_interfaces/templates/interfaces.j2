# {{ ansible_managed }}
auto lo
iface lo inet loopback

{% for interface in network_interfaces_list %}
{%   if interface.auto | default(loop.first) %}

auto {{ interface.device }}
{%   endif %}
{%   for stanza in interface.allow | default([]) %}
allow-{{ stanza }}
{%   endfor -%}

iface {{ interface.device }} {{ interface.family | default('inet', true) }} {{ interface.method | default('dhcp', true) }}
{%   set iface_keys = ['description', 'address', 'broadcast', 'gateway', 'netmask', 'network', 'mtu', 'metric', 'pointopoint'] %}
{%   for key in iface_keys %}
{%     if key in interface %}
	{{ key }} {{ interface[key] }}
{%     endif %}
{%   endfor -%}
{%   if interface['additional_options'] is defined %}
{%     for key, value in interface['additional_options'].items() | sort %}
	{{ key }} {{ value }}
{%     endfor %}
{%   endif -%}

{# nameservers #}
{%-  if (interface.nameservers is defined) and (0 < interface.nameservers | length) %}

	dns-nameservers {{ interface.nameservers | join(' ') }}
{%   endif %}
{%-  if interface.dns_search is defined %}
	dns-search {{ interface.dns_search }}
{%   endif -%}

{# subnets #}
{%-  if (interface.subnets is defined) and (0 < interface.subnets | length) %}
	# additional subnets
{%     for subnet in interface.subnets %}
	up /sbin/ip addr add {{ subnet }} dev {{ interface.device }}
	down /sbin/ip addr del {{ subnet }} dev {{ interface.device }}
{%     endfor %}
{%   endif -%}

{# bridge settings #}
{%-  set bridge_keys = ['ports', 'stp', 'fd', 'maxwait', 'waitport'] %}
{%   if (interface.bridge is defined) and (bridge_keys | intersect(interface.bridge.keys())) %}
{%     for key in bridge_keys %}
{%       if key in interface.bridge %}
	bridge-{{ key }} {{ interface.bridge[key] }}
{%       endif %}
{%     endfor %}
{%   endif -%}

{# bond parameters #}
{%-  set bond_keys = ['mode', 'miimon', 'master', 'slaves', 'lacp-rate', 'xmit-hash-policy'] %}
{%   if (interface.bond is defined) and (bond_keys | intersect(interface.bond.keys())) -%}
{%     for key in bond_keys %}
{%       if key in interface.bond %}
	bond-{{ key }} {{ interface.bond[key] }}
{%       endif %}
{%     endfor %}
{%   endif -%}

{# vlan #}
{%-  set vlan_keys = ['raw-device'] %}
{%   if (interface.vlan is defined) and (vlan_keys | intersect(interface.vlan.keys())) -%}

	# vlan
{%     for key in vlan_keys %}
{%       if key in interface.vlan %}
	vlan-{{ key }} {{ interface.vlan[key] }}
{%       endif %}
{%     endfor %}
{%   endif -%}

{# hook scripts #}
{%-  set hook_keys = ['pre-up', 'up', 'post-up', 'pre-down', 'down', 'post-down'] %}
{%   if hook_keys | intersect(interface.keys()) %}

	# hook scripts
{%     for key in hook_keys %}
{%       if key in interface %}
{%         for value in interface[key] %}
	{{ key }} {{ value }}
{%         endfor %}
{%       endif %}
{%     endfor %}
{%   endif %}

{% endfor %}
{% for line in network_interfaces_extra_config %}
{{ line }}
{% endfor %}